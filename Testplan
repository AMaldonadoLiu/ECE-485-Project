For everything, we test them exhaustively for an address size of 16, so we still have a large number of cases, but it is something that is able to be simulated in a reasonable amount of time.
1.check that we can parse the instruction into the tag, index and byte select
   address bits = 32
   Number of byte select bits = 6
   Number of index bits = 15 
   Number of tag bits = 11
   to test we will grab specific bits of the address that we calculated and compare it with the returned values.
   
2.check that the miss turns into a hit when using the same instruction (with different byte selects)

3.check that the LRU updates correctly
   0 - Move Right, 1 - Move Left
   we can manually check the values for a smaller number of test cases to make sure out checking algorithm works, and then we can increase the associativity to the actual size
   
4.check that we can select the correct one to evict
   0 - Move Left, 1- Move Right
   we can manually check the values for a smaller number of test cases to make sure out checking algorithm works, and then we can increase the associativity to the actual size
   
5.check that mesi updates correctly
   for the MESI protocol, we will have
   00 = invalid
   01 = exclusive
   10 = shared
   11 = modified
   and we will test all possible bus operations, such as hit with intent to modify, hit, etc.
   this will output values like common to alert the other caches to set to shared.
   
6. enter differing instructions to test the miss and hits, and make sure it all works together.


MESI test cases (put them in)
