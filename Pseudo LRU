four-way set associative - three bits
   each bit represents one branch point in a binary decision tree; let 1
   represent that the left side has been referenced more recently than the
   right side, and 0 vice-versa
              are all 4 lines valid?
                   /       \
                 yes        no, use an invalid line
                  |
                  |
                  |
             bit_0 == 0?            state | replace      ref to | next state
              /       \             ------+--------      -------+-----------
             y         n             00x  |  line_0      line_0 |    11_
            /           \            01x  |  line_1      line_1 |    10_
     bit_1 == 0?    bit_2 == 0?      1x0  |  line_2      line_2 |    0_1
       /    \          /    \        1x1  |  line_3      line_3 |    0_0
      y      n        y      n
     /        \      /        \        ('x' means       ('_' means unchanged)
   line_0  line_1  line_2  line_3      don't care)
 8-way set associative - 7  = 1+2+4 bits
16-way set associative - 15 = 1+2+4+8 bits
32-way set associative - 31 = 1+2+4+8+16 bits
64-way set associative - 63 = 1+2+4+8+16+32 bits
*/

static bool PLRU[SETS][4];
void function UpdatePLRU(int set, int way) {
case (way)
0: PLRU[set][0] = 0; PLRU[set][1] = 0; break;
1: PLRU[set][0] = 0; PLRU[set][1] = 1; break;
2: PLRU[set][0] = 1; PLRU[set][2] = 0; break;
3: PLRU[set][0] = 1; PLRU[set][2] = 1; break;
}
